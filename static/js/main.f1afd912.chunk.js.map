{"version":3,"sources":["reducers.js","components/DayForecastList.js","components/WeatherForm.js","config.js","api.js","actions.js","constants.js","Util.js","containers/WeatherFormContainer.js","components/CurrentWeather.js","containers/CurrentWeatherContainer.js","App.js","AppContainer.js","serviceWorker.js","index.js"],"names":["initialState","items","location","currentForecast","temp","icon","forecast","fourDayForecast","1","id","2","3","4","DayForecastList","images","this","props","map","day","index","react_default","a","createElement","key","className","src","concat","alt","Math","round","width","height","date","Component","WeatherForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","handleChange","bind","assertThisInitialized","getLatitudeLongitude","getGeocode","e","setState","target","value","preventDefault","onSubmit","htmlFor","type","aria-describedby","placeholder","autoComplete","onChange","googleApi","process","REACT_APP_GOOGLE_API_KEY","openweathermap","REACT_APP_OPENWEATHER_API_KEY","GOOGLE_API_KEY","OPENWEATHERMAP_API_KEY","getFourDayForecast","lat","lon","axios","get","params","APPID","catch","error","message","getCurrentWeather","getLatitudeLongitudeFailure","payload","fetchGeocode","dispatch","address","then","response","api","resp","data","error_message","fetchWeather","results","geometry","lng","err","long","all","spread","fourday","current","getCurrentWeatherSuccess","getFourDayWeatherFailure","fourDayarray","list","filter","item","getFourDayWeatherSuccess","connect","CurrentWeather","App","fourDayArray","keys","WeatherFormContainer","CurrentWeatherContainer","components_DayForecastList","Boolean","window","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","arguments","length","undefined","action","objectSpread","isFetching","fetchError","newLocation","formatted_address","toString","isFetchingCurrentWeather","currentWeatherfetchError","isFetchingFourDayWeather","fourDayWeatherfetchError","main","weather","description","dt_txt","slice","applyMiddleware","thunk","ReactDOM","render","es","AppContainer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2RAKMA,EAAe,CACpBC,MAAO,CACNC,SAAU,SACVC,gBAAiB,CAChBC,KAAM,KACNC,KAAM,MACNC,SAAS,QAEVC,gBAAiB,CAChBC,EAAK,CACJC,GAAI,IACJL,KAAM,KACNC,KAAM,MACNC,SAAS,SAEVI,EAAK,CACJD,GAAI,IACJL,KAAM,KACNC,KAAM,MACNC,SAAS,eAEVK,EAAK,CACJF,GAAI,IACJL,KAAM,KACNC,KAAM,MACNC,SAAU,SAEXM,EAAK,CACJH,GAAI,IACJL,KAAM,KACNC,KAAM,MACNC,SAAU,qDCWCO,mLA1Cb,IAAMC,EAAS,CAAC,wIAChB,wIACA,wIACA,yIAEMP,EAAkBQ,KAAKC,MAAMV,SAASW,IAAI,SAACC,EAAKC,GACrD,OACCC,EAAAC,EAAAC,cAAA,OAAKC,IAAKL,EAAIT,GAAIe,UAAU,aAC3BJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,QACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAAYC,IAAG,GAAAC,OAAKZ,EAAOK,IAAUQ,IAAI,oBAExDP,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACdJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,mCAAmCI,KAAKC,MAAMX,EAAId,MAAMgB,EAAAC,EAAAC,cAAA,wBAGvEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACdJ,EAAAC,EAAAC,cAAA,OAAKG,IAAG,mCAAAC,OAAqCR,EAAIb,MAAQ,MAAjD,QACRyB,MAAM,KACNC,OAAO,KACPJ,IAAI,SACJP,EAAAC,EAAAC,cAAA,MAAIE,UAAU,4BAA4BN,EAAIc,MAC9CZ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,eAAeN,EAAIZ,eAQtC,OACCc,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACdJ,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbjB,YArCuB0B,oBCqDfC,qBAnDd,SAAAA,EAAYlB,GAAO,IAAAmB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAArB,KAAAmB,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAArB,KAAAqB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAzB,KAAMC,KAEDyB,MAAQ,CACXvC,SAAU,IAGZiC,EAAKO,aAAeP,EAAKO,aAAaC,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACpBA,EAAKU,qBAAuBV,EAAKU,qBAAqBF,KAA1BP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KARbA,oFAalBW,EAD0B/B,KAAKC,MAApB8B,YACA,8CAGCC,GACZhC,KAAKiC,SAAS,CAAC9C,SAAU6C,EAAEE,OAAOC,qDAGdH,GACpBA,EAAEI,kBAEFL,EADuB/B,KAAKC,MAApB8B,YACG/B,KAAK0B,MAAMvC,UACtBa,KAAKiC,SAAS,CAAC9C,SAAU,sCAIzB,OACIkB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACjBJ,EAAAC,EAAAC,cAAA,QAAM8B,SAAUrC,KAAK8B,sBACpBzB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACdJ,EAAAC,EAAAC,cAAA,SAAO+B,QAAQ,iBAAf,aAEDjC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACdJ,EAAAC,EAAAC,cAAA,SAAOgC,KAAK,OAAO9B,UAAU,oCAAoCf,GAAG,gBACnE8C,mBAAiB,iBAAiBC,YAAY,wBAAwBC,aAAa,MACnFP,MAAOnC,KAAK0B,MAAMvC,SAAUwD,SAAU3C,KAAK2B,gBAE7CtB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACdJ,EAAAC,EAAAC,cAAA,UAAQE,UAAU,2BAA2B8B,KAAK,UAAlD,qBA1CmBrB,+BCHb0B,EAAY,CACvBpC,IAAKqC,6DAAYC,0BAGNC,EAAiB,CAC5BvC,IAAKqC,6DAAYG,+BCFbC,EAAiBL,EAAUpC,IAE3B0C,EAAyBH,EAAevC,IAmBjC2C,EAAqB,SAACC,EAAKC,GACvC,OAAOC,IAAMC,IAhB4B,gFAgBW,CACnDC,OAAQ,CACAJ,IAAKA,EACLC,IAAKA,EACLI,MAAOP,KAGfQ,MAAM,SAAAC,GACN,MAAO,CAACA,MAAOA,EAAMC,YAIVC,EAAoB,SAACT,EAAKC,GACtC,OAAOC,IAAMC,IA3B2B,+EA2BW,CAClDC,OAAQ,CACAJ,IAAKA,EACLC,IAAKA,EACLI,MAAOP,KAGfQ,MAAM,SAAAC,GACN,MAAO,CAACA,MAAOA,EAAMC,YCrBVE,EAA8B,SAACH,EAAOI,GACjD,MAAO,CACLxB,KCzB4C,mCD0B5CwB,UACAJ,UA2CSK,EAAe,SAAA7E,GAC1B,OAAO,SAAA8E,GAEL,OADAA,EA/DK,CACL1B,KCZoC,2BDapCwB,QA6D8B5E,ID7DR,SAAAA,GACzB,OAAOmE,IAAMC,IAPc,qDAOW,CACrCC,OAAQ,CACAU,QAAS/E,EACTqB,IAAKyC,KAEXkB,KAAK,SAAAC,GACP,OAAOA,ICuDEC,CAAelF,GACrBgF,KAAK,SAAAG,GACDA,EAAKC,MAAQD,EAAKC,KAAKC,cACtBP,EAASH,EAA4BQ,EAAKC,KAAKC,cAAerF,KAEhE8E,EA9DC,CACL1B,KClB4C,mCDmB5CwB,QA4D+C5E,EA3D/CiF,SA2DyCE,IACrCL,EAASQ,EAAaH,EAAKC,KAAKG,QAAQ,GAAGC,SAASxF,SAASiE,IAAKkB,EAAKC,KAAKG,QAAQ,GAAGC,SAASxF,SAASyF,SAG5GlB,MAAM,SAAAmB,GAAG,OAAIZ,EAASH,EAA4Be,EAAK1F,QAI/CsF,EAAe,SAACrB,EAAI0B,GAC/B,OAAO,SAAAb,GAEL,OADAA,EAxDK,CACL1B,KC/ByB,gBDgCzBwB,QAsDoB,CAACX,IAAKA,EAAK0B,KAAMA,KDxCf,SAAC1B,EAAK0B,GAC/B,OAAOxB,IACLyB,IAAI,CAAC5B,EAAmBC,EAAI0B,GAAOjB,EAAkBT,EAAI0B,KACzDX,KACAb,IAAM0B,OAAO,SAACC,EAASC,GACtB,IAAMd,EAAW,GAMjB,OAJAA,EAASa,QAAUA,EAAQV,KAAOU,EAAQV,KAAOU,EAEjDb,EAASc,QAAUA,EAAQX,KAAOW,EAAQX,KAAOW,EAE1Cd,KAGRV,MAAM,SAAAC,GAAK,OAAIA,IC2BPU,CAAejB,EAAI0B,GACzBX,KAAK,SAAAG,GA5C8B,IAACX,EAmDjC,GANGW,EAAKY,SAAWZ,EAAKY,QAAQvB,MAC9BM,GA9C+BN,EA8CGW,EAAKY,QAAQvB,MA7ChD,CACLpB,KC3CyC,gCD4CzCwB,QA2C2D,CAACX,IAAKA,EAAK0B,KAAMA,GA1C5EnB,WA2CeW,EAAKY,SACdjB,EAxD8B,SAACG,EAAUL,GACjD,MAAO,CACLxB,KCpCyC,gCDqCzCwB,UACAK,YAoDee,CAAyBb,EAAKY,QAAS,CAAC9B,IAAKA,EAAK0B,KAAMA,KAGhER,EAAKW,SAAWX,EAAKW,QAAQtB,MAC9BM,EApC8B,SAACN,EAAOI,GAC9C,MAAO,CACLxB,KCxD0C,iCDyD1CwB,UACAJ,SAgCeyB,CAAyBd,EAAKW,QAAQtB,MAAO,CAACP,IAAKA,EAAK0B,KAAMA,UAClE,GAAIR,EAAKW,QAAS,CACvB,IAAMI,EAAqCf,EAAKW,QAAQK,KEpG5BC,OAAQ,SAACC,EAAMpF,GACnD,OAAOA,EAAQ,IAAM,IFoGb6D,EA/C8B,SAACG,EAAUL,GACjD,MAAO,CACLxB,KCjD0C,iCDkD1CwB,UACAK,YA2CeqB,CAAyBJ,EAAc,CAACjC,IAAKA,EAAK0B,KAAMA,QAGpEpB,MAAM,SAAAmB,GAAG,OAAIA,MGvFLa,cAXS,SAAAhE,GACvB,MAAO,IAImB,SAAAuC,GAC1B,MAAO,CACDlC,WAAY,SAAC5C,GAAD,OAXO,SAAC8E,EAAU9E,GACpC8E,EAASD,EAAa7E,IAUU4C,CAAWkC,EAAS9E,MAItCuG,CAA6CvE,GCI7CwE,SApBQ,SAAA1F,GAAS,IACxBd,EAA4Bc,EAA5Bd,SAAUE,EAAkBY,EAAlBZ,KAAME,EAAYU,EAAZV,SAEvB,OACCc,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,2BACdJ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,mBAAb,yBACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,6BAA6BI,KAAKC,MAAMzB,GAAtD,UACAgB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAActB,GAC5BkB,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAAd,aAAsClB,SCF7BmG,cATS,SAAChE,GACvB,MAAO,CACLvC,SAAUuC,EAAMxC,MAAMC,SACtBE,KAAMqC,EAAMxC,MAAME,gBAAgBC,KAClCE,SAAUmC,EAAMxC,MAAME,gBAAgBG,SACtCD,KAAMoC,EAAMxC,MAAME,gBAAgBE,OAIvBoG,CAAyBC,GCczBC,0LAlBJ,IACApG,EAAoBQ,KAAKC,MAAzBT,gBACJqG,EAAexE,OAAOyE,KAAKtG,GAAiBU,IAAI,SAAC8B,GAClD,OAAOxC,EAAgBwC,KAGzB,OACC3B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACZJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,+CAAd,yBACFJ,EAAAC,EAAAC,cAACwF,EAAD,MACE1F,EAAAC,EAAAC,cAACyF,EAAD,MACA3F,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC0F,EAAD,CAAiB1G,SAAUsG,YAdjB3E,cCGHwE,cANS,SAAChE,GACvB,MAAO,CACLlC,gBAAiBkC,EAAMxC,MAAMM,kBAIlBkG,CAAyBE,GCGpBM,QACW,cAA7BC,OAAOhH,SAASiH,UAEe,UAA7BD,OAAOhH,SAASiH,UAEhBD,OAAOhH,SAASiH,SAASC,MACvB,qECPAC,EAAmBH,OAAOI,sCAAwCC,IAElEC,EAAQC,Yd8BiB,WAAkC,IAAjChF,EAAiCiF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB1H,EAAc6H,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/D,OAAQC,EAAOvE,MACd,IM7CqC,2BN8CpC,OAAOlB,OAAA0F,EAAA,EAAA1F,CAAA,GACHK,EADJ,CAECsF,YAAY,EACZC,WAAY,OAGf,IMnD8C,mCNoD7C,IACMC,EADgBJ,EAAO1C,SAASG,KAAKG,QAAQkC,OAAS,EACxBE,EAAO1C,SAASG,KAAKG,QAAQ,GAAGyC,kBAAoBzF,EAAMxC,MAAMC,SAEnG,OAAOkC,OAAA0F,EAAA,EAAA1F,CAAA,GACHK,EADJ,CAECxC,MAAMmC,OAAA0F,EAAA,EAAA1F,CAAA,GACHK,EAAMxC,MADJ,CAELC,SAAU+H,IAEVF,YAAY,IAGd,IM/D6C,mCNgE5C,OAAO3F,OAAA0F,EAAA,EAAA1F,CAAA,GACHK,EADJ,CAECsF,YAAY,EACZC,WAAYH,EAAOnD,MAAMyD,aAG3B,IMpE0B,gBNqEzB,OAAO/F,OAAA0F,EAAA,EAAA1F,CAAA,GACHK,EADJ,CAECxC,MAAMmC,OAAA0F,EAAA,EAAA1F,CAAA,GACFK,EAAMxC,MADL,CAEJmI,0BAA0B,EAC1BC,yBAA0B,KACtBC,0BAA0B,EAC1BC,yBAA0B,SAIjC,IM9E0C,gCN+EzC,OAAOnG,OAAA0F,EAAA,EAAA1F,CAAA,GACHK,EADJ,CAECxC,MAAMmC,OAAA0F,EAAA,EAAA1F,CAAA,GACFK,EAAMxC,MADL,CAEJE,gBAAgBiC,OAAA0F,EAAA,EAAA1F,CAAA,GACZK,EAAMxC,MAAME,gBADD,CAEdC,KAAMyH,EAAO1C,SAASqD,KAAKpI,KAC3BC,KAAMwH,EAAO1C,SAASsD,QAAQ,GAAGpI,KACjCC,SAAUuH,EAAO1C,SAASsD,QAAQ,GAAGD,OAElCJ,0BAA0B,MAIjC,IM5F0C,gCN6FzC,OAAOhG,OAAA0F,EAAA,EAAA1F,CAAA,GACHK,EADJ,CAECxC,MAAMmC,OAAA0F,EAAA,EAAA1F,CAAA,GACFK,EAAMxC,MADL,CAEAoI,yBAA0BR,EAAOnD,MAAMyD,eAI7C,IMnG0C,iCNoGxC,OAAO/F,OAAA0F,EAAA,EAAA1F,CAAA,GACFK,EADL,CAEExC,MAAMmC,OAAA0F,EAAA,EAAA1F,CAAA,GACDK,EAAMxC,MADN,CAEHM,gBAAgB6B,OAAA0F,EAAA,EAAA1F,CAAA,GACXK,EAAMxC,MAAMM,gBADF,CAEbC,EAAK,CACHC,GAAI,IACJL,KAAMyH,EAAO1C,SAAS,GAAGqD,KAAKpI,KAC9BE,SAAUuH,EAAO1C,SAAS,GAAGsD,QAAQ,GAAGC,YACxCrI,KAAMwH,EAAO1C,SAAS,GAAGsD,QAAQ,GAAGpI,KACpC2B,KAAM6F,EAAO1C,SAAS,GAAGwD,OAAOC,MAAM,EAAE,KAE1ClI,EAAK,CACHD,GAAI,IACJL,KAAMyH,EAAO1C,SAAS,GAAGqD,KAAKpI,KAC9BE,SAAUuH,EAAO1C,SAAS,GAAGsD,QAAQ,GAAGC,YACxCrI,KAAMwH,EAAO1C,SAAS,GAAGsD,QAAQ,GAAGpI,KACpC2B,KAAM6F,EAAO1C,SAAS,GAAGwD,OAAOC,MAAM,EAAE,KAE1CjI,EAAK,CACHF,GAAI,IACJL,KAAMyH,EAAO1C,SAAS,GAAGqD,KAAKpI,KAC9BE,SAAUuH,EAAO1C,SAAS,GAAGsD,QAAQ,GAAGC,YACxCrI,KAAMwH,EAAO1C,SAAS,GAAGsD,QAAQ,GAAGpI,KACpC2B,KAAM6F,EAAO1C,SAAS,GAAGwD,OAAOC,MAAM,EAAE,KAE1ChI,EAAK,CACHH,GAAI,IACJL,KAAMyH,EAAO1C,SAAS,GAAGqD,KAAKpI,KAC9BE,SAAUuH,EAAO1C,SAAS,GAAGsD,QAAQ,GAAGC,YACxCrI,KAAMwH,EAAO1C,SAAS,GAAGsD,QAAQ,GAAGpI,KACpC2B,KAAM6F,EAAO1C,SAAS,GAAGwD,OAAOC,MAAM,EAAE,OAG5CN,0BAA0B,MAIhC,IM1I0C,iCN2IxC,OAAOlG,OAAA0F,EAAA,EAAA1F,CAAA,GACFK,EADL,CAEExC,MAAMmC,OAAA0F,EAAA,EAAA1F,CAAA,GACDK,EAAMxC,MADN,CAEHsI,yBAA2BV,EAAOnD,MAAMyD,eAIhD,QACE,OAAO1F,IcjJsD4E,EAC7DwB,YAAgBC,OAGpBC,IAASC,OACR5H,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAUzB,MAAOA,GAChBpG,EAAAC,EAAAC,cAAC4H,EAAD,OAEDC,SAASC,eAAe,SD4GnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrE,KAAK,SAAAsE,GACjCA,EAAaC","file":"static/js/main.f1afd912.chunk.js","sourcesContent":["import { LATITUDE_LONGITUDE_FETCH, LATITUDE_LONGITUDE_FETCH_SUCCESS,\n LATITUDE_LONGITUDE_FETCH_FAILURE, WEATHER_FETCH,\n CURRENT_WEATHER_FETCH_SUCCESS, CURRENT_WEATHER_FETCH_FAILURE,\n FOUR_DAY_WEATHER_FETCH_SUCCESS, FOUR_DAY_WEATHER_FETCH_FAILURE} from './constants'\n\nconst initialState = {\n\titems: {\n\t\tlocation: 'Harlem',\n\t\tcurrentForecast: {\n\t\t\ttemp: 32.7,\n\t\t\ticon: '10n',\n\t\t\tforecast:'Rain' ,\n\t\t},\n\t\tfourDayForecast: {\n\t\t\t'1': {\n\t\t\t\tid: '1',\n\t\t\t\ttemp: 42.7,\n\t\t\t\ticon: '10n',\n\t\t\t\tforecast:'Windy' ,\n\t\t\t},\n\t\t\t'2': {\n\t\t\t\tid: '2',\n\t\t\t\ttemp: 52.7,\n\t\t\t\ticon: '10n',\n\t\t\t\tforecast:'Spring-like' ,\n\t\t\t},\n\t\t\t'3': {\n\t\t\t\tid: '3',\n\t\t\t\ttemp: 62.7,\n\t\t\t\ticon: '10n' ,\n\t\t\t\tforecast: 'Sunny',\n\t\t\t},\n\t\t\t'4': {\n\t\t\t\tid: '4',\n\t\t\t\ttemp: 72.7,\n\t\t\t\ticon: '10n',\n\t\t\t\tforecast: 'clear skys',\n\t\t\t}\t\t\n\t\t}\t\n\t}\n\n}\n\nexport const forecastReducer = (state = initialState, action) => {  \n  switch (action.type) {\n  \tcase LATITUDE_LONGITUDE_FETCH: {\n  \t\treturn {\n  \t\t\t...state,\n  \t\t\tisFetching: true,\n  \t\t\tfetchError: null\n  \t\t}\n  \t}\n \tcase LATITUDE_LONGITUDE_FETCH_SUCCESS: {\n \t\tconst validLocation= (action.response.data.results.length > 0) ? true : false\n \t\tconst newLocation = validLocation ? action.response.data.results[0].formatted_address : state.items.location\n\n  \t\treturn {\n  \t\t\t...state,\n  \t\t\titems: {\n  \t\t\t...state.items,\n  \t\t\tlocation: newLocation\n  \t\t\t},\n  \t\t\tisFetching: false,\n  \t\t}\n  \t}\n  \tcase LATITUDE_LONGITUDE_FETCH_FAILURE: {\n  \t\treturn {\n  \t\t\t...state,\n  \t\t\tisFetching: false,\n  \t\t\tfetchError: action.error.toString()\n  \t\t}\n  \t} \n  \tcase WEATHER_FETCH: {\n  \t\treturn {\n  \t\t\t...state,\n  \t\t\titems: {\n  \t\t\t\t...state.items,\n  \t\t\t\tisFetchingCurrentWeather: true,\n  \t\t\t\tcurrentWeatherfetchError: null,\n          isFetchingFourDayWeather: true,\t\t\n          fourDayWeatherfetchError: null\t\n  \t\t\t}\t\t\t\n  \t\t}\n  \t} \n  \tcase CURRENT_WEATHER_FETCH_SUCCESS: {\n  \t\treturn {\n  \t\t\t...state,\n  \t\t\titems: {\n  \t\t\t\t...state.items,\n  \t\t\t\tcurrentForecast: {\n  \t\t\t\t\t...state.items.currentForecast,\n  \t\t\t\t\ttemp: action.response.main.temp,\n  \t\t\t\t\ticon: action.response.weather[0].icon,\n  \t\t\t\t\tforecast: action.response.weather[0].main,\n  \t\t\t\t},\n          isFetchingCurrentWeather: false\n  \t\t\t}\n  \t\t}\n  \t}\n  \tcase CURRENT_WEATHER_FETCH_FAILURE: {\n  \t\treturn {\n  \t\t\t...state,\n  \t\t\titems: {\n  \t\t\t\t...state.items,\n          currentWeatherfetchError: action.error.toString()\t\t\t\t\n  \t\t\t}\n  \t\t}\n  \t}\n    case FOUR_DAY_WEATHER_FETCH_SUCCESS: {\n      return {\n        ...state,\n        items: {\n          ...state.items,\n          fourDayForecast: {\n            ...state.items.fourDayForecast,\n            '1': {\n              id: '1',\n              temp: action.response[0].main.temp,\n              forecast: action.response[0].weather[0].description,\n              icon: action.response[0].weather[0].icon,\n              date: action.response[0].dt_txt.slice(5,10)\n            },\n            '2': {\n              id: '2',\n              temp: action.response[1].main.temp,\n              forecast: action.response[1].weather[0].description,\n              icon: action.response[1].weather[0].icon,\n              date: action.response[1].dt_txt.slice(5,10)\n            },\n            '3': {\n              id: '3',\n              temp: action.response[2].main.temp,\n              forecast: action.response[2].weather[0].description,\n              icon: action.response[2].weather[0].icon,\n              date: action.response[2].dt_txt.slice(5,10)\n            },\n            '4': {\n              id: '4',\n              temp: action.response[3].main.temp,\n              forecast: action.response[3].weather[0].description,\n              icon: action.response[3].weather[0].icon,\n              date: action.response[3].dt_txt.slice(5,10)\n            }\n          },\n          isFetchingFourDayWeather: false\n        }\n      }\n    }\n    case FOUR_DAY_WEATHER_FETCH_FAILURE: {\n      return {\n        ...state,\n        items: {\n          ...state.items,     \n          fourDayWeatherfetchError:  action.error.toString()               \n        }\n      }\n    }\n \tdefault:\n  \t\treturn state\n\t}\n}\n\n\n\n","import React, { Component } from 'react'\n\nclass DayForecastList extends Component {\n\n\trender() {\n\t\tconst images = ['https://images.unsplash.com/photo-1482686115713-0fbcaced6e28?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60',\n\t\t'https://images.unsplash.com/photo-1499949059451-9a1119d4e912?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=400&q=60',\n\t\t'https://images.unsplash.com/photo-1498496294664-d9372eb521f3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60',\n\t\t'https://images.unsplash.com/photo-1460411794035-42aac080490a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60']\n\n\t\tconst fourDayForecast = this.props.forecast.map((day, index) => {\n\t\t\treturn (\n\t\t\t\t<div key={day.id} className='col-md-3 '>\n\t\t\t\t\t<div className='card'>\t\t\t\n\t\t\t\t\t\t<img className='card-img ' src={`${images[index]}`} alt='colorful-images'/>\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t<div className='card-img-overlay'>\n\t\t\t\t\t\t\t<h1 className='mx-auto text-center text-white '>{Math.round(day.temp)}<span>&deg; F</span></h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t\t<div className='card-body'>\n\t\t\t\t\t\t\t<img src={`http://openweathermap.org/img/w/${day.icon || \"10n\"}.png`}\n\t\t\t\t\t\t\twidth=\"80\"\n\t\t\t\t\t\t\theight=\"70\"\n\t\t\t\t\t\t\talt=\"icon\"/>\t\n\t\t\t\t\t\t\t<h6 className='card-subtitle text-muted'>{day.date}</h6>\n\t\t\t\t\t\t\t<h5 className='class-title'>{day.forecast}</h5>\t\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t})\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className='container'>\n\t\t\t\t\t<h6>Next four days forecast:</h6>\n\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t{fourDayForecast}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default DayForecastList\n\n\n","import React, { Component } from 'react'\nimport './WeatherForm.css'\n\nclass WeatherForm extends Component {\n\tconstructor(props) {\n\t    super(props)\n\n\t    this.state = {                                     \n\t      location: '',\t      \n\t    }\n\n\t    this.handleChange = this.handleChange.bind(this)\n\t    this.getLatitudeLongitude = this.getLatitudeLongitude.bind(this)\n\t}\n\n\tcomponentDidMount() {\n\t    const { getGeocode } = this.props\n\t\tgetGeocode('10026')\n\t}\n\n\thandleChange(e) {\n\t\tthis.setState({location: e.target.value })\n\t}\n\n\tgetLatitudeLongitude(e) {\n\t\te.preventDefault()\n\t\tconst { getGeocode } = this.props\n\t\tgetGeocode(this.state.location)\n\t\tthis.setState({location: ''})\t\t\n\t}\n\n\trender() {\n\t\treturn (\n\t\t    <div className='container '>\n\t\t\t\t<form onSubmit={this.getLatitudeLongitude}>\t\n\t\t\t\t\t<div className='form-group row'>\n\t\t\t\t\t\t<div className='col-md-1 mr-4'>\n\t\t\t\t\t\t\t<label htmlFor=\"InputLocation\">Search: </label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='col-md-7'>\t \n\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control form-control-lg mb-2\" id=\"InputLocation\" \n\t\t\t\t\t\t\t\taria-describedby=\"locationlookup\" placeholder=\"Enter city or zipcode\" autoComplete=\"off\"\n\t\t\t\t\t\t\t\tvalue={this.state.location} onChange={this.handleChange}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='col-md-3'>\n\t\t\t\t\t\t\t<button className='button btn-lg text-white' type=\"submit\">Lookup</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default WeatherForm","export const googleApi = {\n  key: process.env.REACT_APP_GOOGLE_API_KEY\n}\n\nexport const openweathermap = {\n  key: process.env.REACT_APP_OPENWEATHER_API_KEY\n}\n\n","import axios from 'axios'\nimport { googleApi, openweathermap } from './config'\n\nconst GOOGLE_API_KEY = googleApi.key\n\nconst OPENWEATHERMAP_API_KEY = openweathermap.key\n\nconst API_BASE_URL_GOOGLE = 'https://maps.googleapis.com/maps/api/geocode/json?'\n\nconst API_BASE_URL_OPENWEATHER_FORECAST = 'https://api.openweathermap.org/data/2.5/forecast?&cnt=32&units=imperial&cnt=7' \n\nconst API_BASE_URL_OPENWEATHER_CURRENT = 'https://api.openweathermap.org/data/2.5/weather?&cnt=32&units=imperial&cnt=7'  \n\nexport const getGeocode = location => { \n\treturn axios.get(API_BASE_URL_GOOGLE, {\n\t\tparams: {\n          address: location,\n          key: GOOGLE_API_KEY\n        }\n\t}).then(response => {\n\t\treturn response\n\t})                \n} \n\nexport const getFourDayForecast = (lat, lon) => {\n\treturn axios.get(API_BASE_URL_OPENWEATHER_FORECAST, {\n\t\tparams: {\n          lat: lat,\n          lon: lon,\n          APPID: OPENWEATHERMAP_API_KEY\n        }\n\t})\n\t.catch(error => {\n\t\treturn {error: error.message}\n\t})\n}\n\nexport const getCurrentWeather = (lat, lon) => {\n\treturn axios.get(API_BASE_URL_OPENWEATHER_CURRENT, {\n\t\tparams: {\n          lat: lat,\n          lon: lon,\n          APPID: OPENWEATHERMAP_API_KEY\n        }\n\t})\n\t.catch(error => {\n\t\treturn {error: error.message}\n\t})\n}\n\nexport const getWeather = (lat, long) => { \n\treturn axios\n\t\t.all([getFourDayForecast(lat,long), getCurrentWeather(lat,long)])\n\t\t.then(\n\t\t\taxios.spread((fourday, current) => {\n\t\t\t\tconst response = {}\n\n\t\t\t\tresponse.fourday = fourday.data ? fourday.data : fourday\n\n\t\t\t\tresponse.current = current.data ? current.data : current\n\n\t\t\t\treturn response\n\t\t\t})\n\t\t)\n\t\t.catch(error => error )               \n} ","import { LATITUDE_LONGITUDE_FETCH, LATITUDE_LONGITUDE_FETCH_SUCCESS,\n LATITUDE_LONGITUDE_FETCH_FAILURE, WEATHER_FETCH,\n CURRENT_WEATHER_FETCH_SUCCESS, CURRENT_WEATHER_FETCH_FAILURE,\n FOUR_DAY_WEATHER_FETCH_SUCCESS, FOUR_DAY_WEATHER_FETCH_FAILURE\n } from './constants'\n\nimport * as api from './api'\n\nimport {hourlyToDailyForecast} from './Util'\n\nexport const getLatitudeLongitude = (payload) => {         \n  return {\n    type: LATITUDE_LONGITUDE_FETCH,\n    payload\n  }\n}\n\nexport const getLatitudeLongitudeSuccess = (response, payload) => {         \n  return {\n    type: LATITUDE_LONGITUDE_FETCH_SUCCESS,\n    payload,\n    response\n  }\n}\n\nexport const getLatitudeLongitudeFailure = (error, payload) => {         \n  return {\n    type: LATITUDE_LONGITUDE_FETCH_FAILURE,\n    payload,\n    error\n  }\n}\n\nexport const getWeather = (payload) => {       \n  return {\n    type: WEATHER_FETCH,\n    payload\n  }\n}\n\nexport const getCurrentWeatherSuccess = (response, payload) => {         \n  return {\n    type: CURRENT_WEATHER_FETCH_SUCCESS,\n    payload,\n    response\n  }\n}\n\nexport const getCurrentWeatherFailure = (error, payload) => {         \n  return {\n    type: CURRENT_WEATHER_FETCH_FAILURE,\n    payload,\n    error\n  }\n}\n\nexport const getFourDayWeatherSuccess = (response, payload) => {         \n  return {\n    type: FOUR_DAY_WEATHER_FETCH_SUCCESS,\n    payload,\n    response\n  }\n}\n\nexport const getFourDayWeatherFailure = (error, payload) => {         \n  return {\n    type: FOUR_DAY_WEATHER_FETCH_FAILURE,\n    payload,\n    error\n  }\n}\n\nexport const fetchGeocode = location => {\n  return dispatch => {\n    dispatch(getLatitudeLongitude(location))\n    return api.getGeocode(location)\n    .then(resp => {\n      if(resp.data && resp.data.error_message) {\n          dispatch(getLatitudeLongitudeFailure(resp.data.error_message, location))\n      } else {\n        dispatch(getLatitudeLongitudeSuccess(resp, location))\n        dispatch(fetchWeather(resp.data.results[0].geometry.location.lat, resp.data.results[0].geometry.location.lng))\n      }\n    })\n    .catch(err => dispatch(getLatitudeLongitudeFailure(err, location)))\n  }\n}\n\nexport const fetchWeather = (lat,long) => {\n  return dispatch => {\n    dispatch(getWeather({lat: lat, long: long}))\n    return api.getWeather(lat,long)\n    .then(resp => {\n        if(resp.current && resp.current.error) {\n          dispatch(getCurrentWeatherFailure(resp.current.error,{lat: lat, long: long}))\n        } else if (resp.current) {\n          dispatch(getCurrentWeatherSuccess(resp.current, {lat: lat, long: long}))\n        } \n\n        if(resp.fourday && resp.fourday.error)  {\n          dispatch(getFourDayWeatherFailure(resp.fourday.error, {lat: lat, long: long}))\n        } else if (resp.fourday) {\n          const fourDayarray = hourlyToDailyForecast(resp.fourday.list)\n          dispatch(getFourDayWeatherSuccess(fourDayarray, {lat: lat, long: long}))\n        }\n      })\n      .catch(err => err)\n   }\n}\n\n","export const LATITUDE_LONGITUDE_FETCH = 'LATITUDE_LONGITUDE/FETCH'\nexport const LATITUDE_LONGITUDE_FETCH_SUCCESS = 'LATITUDE_LONGITUDE/FETCH_SUCCESS'\nexport const LATITUDE_LONGITUDE_FETCH_FAILURE = 'LATITUDE_LONGITUDE/FETCH_FAILURE'\n\nexport const WEATHER_FETCH = 'WEATHER/FETCH'\n\nexport const CURRENT_WEATHER_FETCH_SUCCESS = 'CURRENT_WEATHER/FETCH_SUCCESS'\nexport const CURRENT_WEATHER_FETCH_FAILURE = 'CURRENT_WEATHER/FETCH_FAILURE'\n\nexport const FOUR_DAY_WEATHER_FETCH_SUCCESS = 'FOUR_DAY_WEATHER/FETCH_SUCCESS'\nexport const FOUR_DAY_WEATHER_FETCH_FAILURE = 'FOUR_DAY_WEATHER/FETCH_FAILURE'","export const hourlyToDailyForecast = (listOfForecast) => {\n\n\tlet fourDayForecast = listOfForecast.filter( (item, index) => {\n\t\treturn index % 8 === 0\n\t})\n\n\treturn fourDayForecast\n}","import { connect } from 'react-redux'\nimport WeatherForm from '../components/WeatherForm'\nimport {fetchGeocode} from '../actions'\n\nexport const getGeocode = (dispatch, location) => {\n\tdispatch(fetchGeocode(location))\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n       getGeocode: (location) => getGeocode(dispatch,location)\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherForm)","import React from 'react'\nimport './CurrentWeather.css'\n\nconst CurrentWeather = props => {\n\tconst {location, temp, forecast} = props\n\n\treturn (\n\t\t<div className='home-section ml-3 mr-3'>\t\n\t\t\t<div className='home-inner container'>\n\t\t\t\t<div className='row'>\n\t\t\t\t\t<div className='col-lg-8 currentWeather'>\n\t\t\t\t\t\t<p className='pt-3 text-white'>Current temperature: </p>\n\t\t\t\t\t\t<h1 className='display-4 pb-4 text-white'>{Math.round(temp)}&deg; F</h1>\n\t\t\t\t\t\t<h5 className='text-white'>{location}</h5>\n\t\t\t\t\t\t<h4 className='text-white'>Forecast: {forecast}</h4>\n\t\t\t\t\t</div>\t\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\t\t\n\t\t</div>\n\n\t)\n}\n\nexport default CurrentWeather\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import { connect } from 'react-redux'   \nimport CurrentWeather from '../components/CurrentWeather'\n\nconst mapStateToProps = (state) => {                  \n  return {\n    location: state.items.location,\n    temp: state.items.currentForecast.temp,\n    forecast: state.items.currentForecast.forecast,\n    icon: state.items.currentForecast.icon\n  }\n}\n\nexport default connect(mapStateToProps)(CurrentWeather);","import React, { Component } from 'react'\nimport DayForecastList from './components/DayForecastList'\nimport WeatherFormContainer from './containers/WeatherFormContainer'\nimport CurrentWeatherContainer from './containers/CurrentWeatherContainer'\nimport './App.css'\n\nclass App extends Component {\n\n  render() {\n   const { fourDayForecast } = this.props\n   let fourDayArray = Object.keys(fourDayForecast).map((e) => {\n      return fourDayForecast[e]\n  })\n\n    return (\n    \t<div className=\"App container\"> \n        <h1 className='header-text text-center pt-4 pb-5 ml-1 mr-1'>Fantastic Weather App</h1>  \n    \t\t<WeatherFormContainer/>    \n        <CurrentWeatherContainer/>\n        <br/>\n        <DayForecastList forecast={fourDayArray}/>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import { connect } from 'react-redux'   \nimport App from './App'\n\nconst mapStateToProps = (state) => {              \n  return {\n    fourDayForecast: state.items.fourDayForecast\n  }\n}\n\nexport default connect(mapStateToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {forecastReducer} from './reducers'\nimport AppContainer from './AppContainer'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(forecastReducer, /* preloadedState, */ composeEnhancers(\n\t   applyMiddleware(thunk)\n))\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<AppContainer />\n\t</Provider>, \n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}